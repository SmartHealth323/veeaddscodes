import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Spinner;
import android.widget.Toast;

public class registerup extends Activity {

	Spinner sp;
	Context c = this;
	EditText uname, add, contac, password, userid, city, email;
	RadioGroup rg;
	RadioButton rb;
	Button submit, clear;
	SQLiteDatabase db;
	String u_name, u_email, u_add, u_contac, u_password, u_userid, u_city,
			u_gender, s;
	int id;
	String name[] = { "Select Category", "Doctor", "Patient", "Receptionist" };

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		db = openOrCreateDatabase("getdoctor", Context.MODE_PRIVATE, null);
		 //db.execSQL("drop table if exists cat");
		//db.execSQL("drop table if exists doctor");
		//db.execSQL("drop table if exists approve");
		//db.execSQL("drop table if exists advice");
		//db.execSQL("drop table if exists reject");
		//db.execSQL("drop table if exists patient");
		//db.execSQL("drop table if exists receptionist");
		// db.execSQL("drop table if exists appointment");
		//db.execSQL("drop table if exists insurance");
		db.execSQL("create table if not exists reject(rj_id integer primary key autoincrement , reject_patient_name varchar2(500),rj_date varchar2(500),rj_time varchar2(500),rj_con varchar2(10))");
		db.execSQL("create table if not exists approve(ap_id integer primary key autoincrement , patient_name varchar2(500),ap_date varchar2(500),ap_time varchar2(500),ap_problem varchar2(500))");
		db.execSQL("create table if not exists appointment(id integer primary key autoincrement , name varchar2(50) ,address varchar2(20),contact integer(12),email varchar2(20),problem varchar2(20),doname varchar2(20),date varchar2(10),time varchar2(10))");
		db.execSQL("create table if not exists doctor(d_id integer primary key autoincrement , d_name varchar2(50) ,d_address varchar2(20),d_gender varchar2(10),d_city varchar2(10) ,d_contact integer(12),d_uid varchar2(32),d_psw varchar2(16),d_email varchar2(20),d_speciality varchar2(20),d_qualification varchar2(20),d_college varchar2(20),d_date varchar2(10),d_time varchar2(10))");
		db.execSQL("create table if not exists patient(p_id integer primary key autoincrement, p_name varchar2(50),p_address varchar2(20),p_gender varchar2(10),p_city varchar2(10),p_contact integer(12),p_email varchar2(20),p_uid varchar2(32),p_psw varchar2(16),p_problem varchar2(20),dname varchar2(20),p_date varchar2(10),p_time varchar2(10))");
		db.execSQL("create table if not exists receptionist(r_id integer primary key autoincrement , r_name varchar2(50) ,r_address varchar2(20),r_gender varchar2(10) ,r_city varchar2(10),r_contact integer(12),r_email varchar2(20),r_uid varchar2(32),r_psw varchar2(16),doctor_name varchar2(20),r_date varchar2(10),r_time varchar2(10))");
		db.execSQL("create table if not exists insurance(i_id integer primary key autoincrement , h_name varchar2(50) ,h_address varchar2(20),h_gender varchar2(10),type varchar2(12),h_contact varchar2(20),compny varchar2(20),amount varchar2(20))");
		db.execSQL("create table if not exists advice(a_id integer primary key autoincrement , que varchar2(500),ans varchar2(500))");
		setContentView(R.layout.registrup);

		
		sp = (Spinner) findViewById(R.id.spinner1);
		uname = (EditText) findViewById(R.id.name);
		add = (EditText) findViewById(R.id.add);
		contac = (EditText) findViewById(R.id.number);
		email = (EditText) findViewById(R.id.email);
		password = (EditText) findViewById(R.id.psw);
		userid = (EditText) findViewById(R.id.uid);
		city = (EditText) findViewById(R.id.city);
		rg = (RadioGroup) findViewById(R.id.radiogroup1);
		/*
		 * male = (RadioButton) findViewById(R.id.radio1); female =
		 * (RadioButton) findViewById(R.id.radio2);
		 */submit = (Button) findViewById(R.id.submit);
		clear = (Button) findViewById(R.id.clear);

		ArrayAdapter<String> ad = new ArrayAdapter<String>(c,
				android.R.layout.simple_spinner_item, name);
		sp.setAdapter(ad);


		submit.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub

				u_name = uname.getText().toString();
				u_userid = userid.getText().toString();
				u_password = password.getText().toString();
				u_add = add.getText().toString();
				u_email = email.getText().toString();
				u_contac = contac.getText().toString();
				u_city = city.getText().toString();
				int id = rg.getCheckedRadioButtonId();
				rb = (RadioButton) findViewById(id);

				u_gender = rb.getText().toString();

				if (uname.getText().toString().trim().equals("")) {
					uname.setError("Enter Name");

				}
				if (add.getText().toString().trim().equals("")) {
					add.setError("Enter Address");

				}

				if (!rb.isChecked()) {
					rb.setError("Pls select gender");
				}

				if (sp.getSelectedItemPosition() == 0)

				{
					Toast.makeText(getApplicationContext(), "Select Type", 3000)
							.show();
				}
				if (contac.getText().toString().trim().equals("")) {
					contac.setError("Enter Contac number");

				}
				if (email.getText().toString().trim().equals("")) {
					email.setError("Enter Name");
				}
				if (city.getText().toString().trim().equals("")) {
					city.setError("Enter City");

				}
				if (userid.getText().toString().trim().equals("")) {
					userid.setError("Enter User Id");

				}
				if (password.getText().toString().trim().equals("")) {
					password.setError("Enter Password");

				}
				
				

				if (s.equals("Doctor")) {
					

					Cursor c1 = db.rawQuery(
							"select d_name from doctor where d_name='"+u_name+"' ", null);

					if (c1.getCount() != 0) {
						Toast.makeText(c, "User Is Already Available", 3000).show();
					} 
					else{
					db.execSQL("insert into doctor(d_id,d_name,d_address,d_gender,d_contact,d_email,d_city,d_uid,d_psw,d_image,d_cover) values(?,'"
							+ u_name
							+ "','"
							+ u_add
							+ "','"
							+ u_gender
							+ "','"
							+ u_contac
							+ "','"
							+ u_email
							+ "','"
							+ u_city
							+ "','" + u_userid + "','" + u_password + "')");
					Toast.makeText(c, "Success", Toast.LENGTH_SHORT).show();
					Intent i = new Intent(getApplicationContext(), loginn.class);
					startActivity(i);
					}
				}

					if (s.equals("Patient")) {
						Cursor c1 = db.rawQuery(
								"select p_name from patient where p_name='"+u_name+"'", null);

						if (c1.getCount() != 0) {
							Toast.makeText(c, "User Is Already Available", 3000).show();
						} 
						else{

						db.execSQL("insert into patient(p_id,p_name,p_address,p_gender,p_contact,p_email,p_city,p_uid,p_psw,p_image,p_cover) values(?,'"
								+ u_name
								+ "','"
								+ u_add
								+ "','"
								+ u_gender
								+ "','"
								+ u_contac
								+ "','"
								+ u_email
								+ "','"
								+ u_city
								+ "','"
								+ u_userid
								+ "','"
								+ u_password + "')");
						Toast.makeText(c, "Success", Toast.LENGTH_SHORT).show();
						Intent i = new Intent(getApplicationContext(),
								loginn.class);
						startActivity(i);

					}
				}
				

				if (s.equals("Receptionist")) {
					Cursor c1 = db.rawQuery(
							"select r_name from receptionist where r_name='"+u_name+"'", null);

					if (c1.getCount() != 0) {
						Toast.makeText(c, "User Is Already Available", 3000).show();
					} 
					else{

					db.execSQL("insert into receptionist(r_id,r_name,r_address,r_gender,r_contact,r_email,r_city,r_uid,r_psw) values(?,'"
							+ u_name
							+ "','"
							+ u_add
							+ "','"
							+ u_gender
							+ "','"
							+ u_contac
							+ "','"
							+ u_email
							+ "','"
							+ u_city
							+ "','" + u_userid + "','" + u_password + "')");
					Toast.makeText(c, "Success", Toast.LENGTH_SHORT).show();
					Intent i = new Intent(getApplicationContext(), loginn.class);
					startActivity(i);

				}
				}

			}
		});

		clear.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				uname.setText("");
				add.setText("");
				contac.setText("");
				password.setText("");
				userid.setText("");
				city.setText("");

			}
		});

	}

	public void onItemSelected(AdapterView<?> arg0, View arg1, int arg2,
			long arg3) {
		// TODO Auto-generated method stub
		s = arg0.getItemAtPosition(arg2).toString();
	}

	public void onNothingSelected(AdapterView<?> arg0) {
		// TODO Auto-generated method stub

	}





private String getpath(Uri uri) {

	String[] p = { MediaStore.Images.Media.DATA };
	Cursor c = managedQuery(uri, p, null, null, null);
	int colum_index = c.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
	c.moveToFirst();

	return c.getString(colum_index);
}
}
